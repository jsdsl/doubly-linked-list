{"version":3,"sources":["../ts/doubly-linked-list-node.ts"],"names":["DoublyLinkedListNode","[object Object]","content","parentList","previousNode","nextNode","this","previous","next","name","hasPreviousNode","Error","undefined","displaced","hasNextNode","exports"],"mappings":"oEAeA,MAAaA,qBAUZC,YAAmBC,EAAmBC,EAAiCC,EAAwCC,GAE9GC,KAAKJ,QAAUA,EACfI,KAAKH,WAAaA,EAClBG,KAAKC,SAAWH,EAChBE,KAAKE,KAAOH,EAINJ,aAEN,GAAqB,OAAjBK,KAAKJ,QAAkB,OAAOI,KAAKJ,QAClC,CAEJ,IAAIO,EAAgBH,KAAKI,kBAAoB,WAAa,WAE1D,MAAM,IAAIC,MAAM,2EAA6EF,EAAO,YAM/FR,gBAEN,OAAOK,KAAKH,WAINF,kBAEN,YAA0BW,IAAlBN,KAAKC,SAIPN,kBAEN,GAAIK,KAAKI,kBAAmB,OAAOJ,KAAKC,SAGvC,MAAM,IAAII,MAAM,8GAOXV,gBAAgBG,GAEtB,IAAIS,EAAiDP,KAAKC,SAE1D,OADAD,KAAKC,SAAWH,EACTS,EAIDZ,cAEN,YAAsBW,IAAdN,KAAKE,KAIPP,cAEN,GAAIK,KAAKQ,cAAe,OAAOR,KAAKE,KAGnC,MAAM,IAAIG,MAAM,+GAOXV,YAAYI,GAElB,IAAIQ,EAAiDP,KAAKE,KAE1D,OADAF,KAAKE,KAAOH,EACLQ,GAtFTE,QAAAf,qBAAAA","file":"doubly-linked-list-node.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t12:54 PM -- March 14th, 2019.\n *\tProject: @jsdsl/doubly-linked-list\n */\n\nimport { DoublyLinkedList } from \"./doubly-linked-list\";\n\n/**\n *\n *\n * @author Trevor Sears <trevorsears.main@gmail.com>\n * @version v0.1.0\n * @since v0.1.0\n */\nexport class DoublyLinkedListNode<E> {\n\t\n\tprivate previous: DoublyLinkedListNode<E> | undefined;\n\t\n\tprivate next: DoublyLinkedListNode<E> | undefined;\n\t\n\tprivate parentList: DoublyLinkedList<E>;\n\t\n\tprivate content: E | null;\n\t\n\tpublic constructor(content: E | null, parentList: DoublyLinkedList<E>, previousNode?: DoublyLinkedListNode<E>, nextNode?: DoublyLinkedListNode<E>) {\n\t\t\n\t\tthis.content = content;\n\t\tthis.parentList = parentList;\n\t\tthis.previous = previousNode;\n\t\tthis.next = nextNode;\n\t\t\n\t}\n\t\n\tpublic getElement(): E {\n\t\t\n\t\tif (this.content !== null) return this.content;\n\t\telse {\n\t\t\t\n\t\t\tlet name: string = (this.hasPreviousNode() ? \"epilogue\" : \"prologue\");\n\t\t\t\n\t\t\tthrow new Error(\"ERR | Attempted to retrieve null content out of a DoublyLinkedListNode (\" + name + \" node).\");\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tpublic getParentList(): DoublyLinkedList<E> {\n\t\t\n\t\treturn this.parentList;\n\t\t\n\t}\n\t\n\tpublic hasPreviousNode(): boolean {\n\t\t\n\t\treturn (this.previous !== undefined);\n\t\t\n\t}\n\t\n\tpublic getPreviousNode(): DoublyLinkedListNode<E> {\n\t\t\n\t\tif (this.hasPreviousNode()) return this.previous as DoublyLinkedListNode<E>;\n\t\telse {\n\t\t\t\n\t\t\tthrow new Error(\"ERR | Attempted to retrieve the previous node of a DoublyLinkedListNode that did not \" +\n\t\t\t\t\"have a prior sibling.\");\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tpublic setPreviousNode(previousNode: DoublyLinkedListNode<E> | undefined): DoublyLinkedListNode<E> | undefined {\n\t\t\n\t\tlet displaced: DoublyLinkedListNode<E> | undefined = this.previous;\n\t\tthis.previous = previousNode;\n\t\treturn displaced;\n\t\t\n\t}\n\t\n\tpublic hasNextNode(): boolean {\n\t\t\n\t\treturn (this.next !== undefined);\n\t\t\n\t}\n\t\n\tpublic getNextNode(): DoublyLinkedListNode<E> {\n\t\t\n\t\tif (this.hasNextNode()) return this.next as DoublyLinkedListNode<E>;\n\t\telse {\n\t\t\t\n\t\t\tthrow new Error(\"ERR | Attempted to retrieve the next node of a DoublyLinkedListNode that did not have a \" +\n\t\t\t\t\"successive sibling.\");\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tpublic setNextNode(nextNode: DoublyLinkedListNode<E> | undefined): DoublyLinkedListNode<E> | undefined {\n\t\t\n\t\tlet displaced: DoublyLinkedListNode<E> | undefined = this.next;\n\t\tthis.next = nextNode;\n\t\treturn displaced;\n\t\t\n\t}\n\t\n}"]}